/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author LogiRavi
 */
import java.awt.event.KeyEvent;
public class GameFrame extends javax.swing.JFrame {

    /**
     * Creates new form GameFrame
     */
    GameField gf;

    public GameFrame() {
        initComponents();
        gf = new GameField();
        gf.setSize(600,600);
        gf.setVisible(true);
        gf.repaint();
        add(gf);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {	
            public void keyPressed(java.awt.event.KeyEvent evt) {	
                formKeyPressed(evt);	
            }	
        });
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>

    private void formKeyPressed(java.awt.event.KeyEvent evt) {   
                                 	
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT)	
            gf.moveRight();	
        gf.repaint();
        if (evt.getKeyCode() == KeyEvent.VK_LEFT)	
            gf.moveLeft();
        gf.repaint();
        if (evt.getKeyCode() == KeyEvent.VK_UP)	
            gf.moveDown();
        gf.repaint();	
        if (evt.getKeyCode() == KeyEvent.VK_DOWN)	
            gf.moveUp();
        gf.repaint();
        gf.win();		
            
        // if (evt.getKeyCode() == KeyEvent.VK_UP)	
        //     gf.moveUp();
        //     gf.repaint();		
        // if (evt.getKeyCode() == KeyEvent.VK_DOWN)	
        //     gf.moveDown();
        //     gf.repaint();		
        
    } 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    // End of variables declaration
}
